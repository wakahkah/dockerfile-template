version: '2.2'
services:
  apm-server:
    image: docker.elastic.co/apm/apm-server:7.12.0
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    cap_add: [ "CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID" ]
    cap_drop: [ "ALL" ]
    ports:
      - 8200:8200
    networks:
      - elastic
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana:5601
        -E apm-server.kibana.username=elastic
        -E apm-server.kibana.password=rl64719629
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
        -E output.elasticsearch.username=elastic
        -E output.elasticsearch.password=rl64719629
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    environment:
      - bootstrap.memory_lock=true
      - cluster.name=docker-cluster
      - cluster.routing.allocation.disk.threshold_enabled=false
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ES_JAVA_OPTS=-XX:UseAVX=2 -Xms1g -Xmx1g
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
    restart: always

  kibana:
    image: docker.elastic.co/kibana/kibana:7.12.0
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: bd
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: efd7cbea7034cf9fed17c6c4d1162a22
    ports:
      - 5601:5601
    networks:
      - elastic
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --user elastic:rl64719629 --fail --silent --output /dev/null http://localhost:5601/api/status
    restart: always

  logstash:
    image: docker.elastic.co/logstash/logstash:7.12.0
    command: bash -c "bin/logstash-plugin install /usr/share/logstash/logstash-output-mongodb-3.1.5.gem && logstash -f /usr/share/logstash/pipeline/logstash.conf "
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - 9600:9600
      - 5000:5000
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/logstash-output-mongodb-3.1.5.gem:/usr/share/logstash/logstash-output-mongodb-3.1.5.gem
    networks:
      - elastic
    restart: always

volumes:
  esdata:
    driver: local

networks:
  elastic:
    driver: bridge
